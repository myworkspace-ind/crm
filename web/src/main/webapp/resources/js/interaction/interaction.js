$(document).ready(function () {
    const urlParams = new URLSearchParams(window.location.search);
    const customerId = urlParams.get('id'); // L·∫•y gi√° tr·ªã c·ªßa tham s·ªë 'id'

    if (customerId) {
        loadTableData(customerId); // G·ªçi h√†m loadTableData v·ªõi customerId t·ª´ URL
    } else {
        console.error('Kh√¥ng t√¨m th·∫•y ID kh√°ch h√†ng trong URL.');
    }
});

/**
 * Load d·ªØ li·ªáu t∆∞∆°ng t√°c t·ª´ server v√† kh·ªüi t·∫°o Handsontable
 */
function loadTableData(customerId) {
    if (!customerId) {
        console.error('Customer ID is required to load interactions.');
        return;
    }

	// X√¢y d·ª±ng URL ƒë·ªông v·ªõi _ctx
	const url = `${_ctx}/customer/load-interaction?id=${customerId}`;

    $.ajax({
        url: url,
        type: 'GET',
        dataType: 'json',
        contentType: 'application/json',
        success: function(res) {
            console.log("D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c:", JSON.stringify(res));

            if (res) {
                initTable(res.colHeaders, res.colWidths, res.data); // G·ªçi h√†m initTable ƒë·ªÉ kh·ªüi t·∫°o Handsontable
            }
        },
        error: function(e) {
            console.log("L·ªói t·∫£i d·ªØ li·ªáu: " + e);
        }
    });
}


function initTable(colHeaders, colWidths, data) {
    console.log("HST:", document.getElementById('tblInteraction'));

    var container = document.getElementById('tblInteraction');
    
    if (container) {
        htInteraction = new Handsontable(container, {
            data: data,
            colHeaders: colHeaders,
            colWidths: colWidths,
            columns: [
                { type: 'text', readOnly: true }, 
                { type: 'date', dateFormat: 'YYYY-MM-DD', correctFormat: true }, 
                { type: 'text' },
                { type: 'text' }, 
                { 
                    renderer: function(instance, td, row, col, prop, value, cellProperties) {
                        Handsontable.dom.empty(td); // X√≥a n·ªôi dung c≈©
						
                        const button = document.createElement('button');
                        button.innerText = 'üóëÔ∏è';
                        button.className = 'delete-button';
                        button.onclick = function() {
                            deleteRow(row, value); // G·ªçi h√†m deleteRow khi nh·∫•n n√∫t
                        };
						
                        td.appendChild(button);
                        return td;
                    }
                }, // H√†nh ƒë·ªông (n√∫t x√≥a)
            ],
            rowHeaders: true,
            minRows: 8,
            height: 400,
            currentRowClassName: 'currentRow',
            currentColClassName: 'currentCol',
            manualColumnResize: true,
            manualRowResize: true,
            minSpareRows: 1,
            contextMenu: true,
            licenseKey: 'non-commercial-and-evaluation',			
        });
					
    } else {
        console.error("Container tblInteraction kh√¥ng t·ªìn t·∫°i.");
    }
}

function deleteRow(rowIndex, interactionId) {
    if (confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a h√†ng s·ªë ${rowIndex + 1}?`)) {
        // G·ªçi API DELETE v·ªõi interactionId l√† query parameter
        $.ajax({
            url: `${_ctx}/customer/delete-interaction?id=${interactionId}`,  // ƒê·∫∑t interactionId v√†o URL
            type: 'DELETE',
            success: function(response) {
                console.log('X√≥a th√†nh c√¥ng:', response);						
				// Sau khi x√≥a th√†nh c√¥ng, x√≥a h√†ng trong Handsontable
				htInteraction.alter('remove_row', rowIndex);		
            },
            error: function(error) {
                console.error('L·ªói khi x√≥a:', error);
                alert('C√≥ l·ªói x·∫£y ra khi x√≥a d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i.');
            }
        });
    }
}
